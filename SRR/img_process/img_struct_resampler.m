function images_res = img_struct_resampler(images, t_last, img_res_params, files_contours_LA_endo, files_contours_LA_epi,files_contours_SA_endo, files_contours_SA_epi, coordsRconst)
%%
%======> This is a work in progress.
%
%======> img_struct_resampler:
%
%           INPUTS:
%
%
%
%           OUTPUTS:
%
%
%
%
%======
% Developed by MK on 2022_01_18
% Last rev. by MK on 2022_01_18
%
%======> This is a work in progress.
%%
disp(['<======"img_struct_resampler" ======> LA images']);
images_res = cell2struct_nested(img_struct_cells());
images_res.params =img_res_params;
cntrs_LA_used = contour_used(images.props.LA.index, img_res_params.LA.index_used, img_res_params.LA.flip_contours);

if ~isempty(img_res_params.LA.index_used)
    [images_res.pvals.gray, ...
        images_res.coords.RCS.X, images_res.coords.RCS.Y, images_res.coords.RCS.Z,  ...
        images_res.ROI.LV, ...
        images_res.ROI.LV3D.LA] = ...
        img_sr_2isometric(...%==
        images.pvals.gray(img_res_params.LA.index_used, :),...
        images.coords.RCS.X(img_res_params.LA.index_used,:),...
        images.coords.RCS.Y(img_res_params.LA.index_used,:),...
        images.coords.RCS.Z(img_res_params.LA.index_used,:), ...
        img_res_params.LA.resample_ratio,...
        img_res_params.LA.expand,...
        img_res_params.LA.interp.img,...
        t_last, ...
        img_res_params.LA.has_contours, ...
        files_contours_LA_endo, ...
        files_contours_LA_epi, ...
        images.props.LA.PixelSpacing, ...
        img_res_params.LA.crop_dims, ...
        img_res_params.LA.flip_contours, ...
        cntrs_LA_used,...
        coordsRconst);
    images_res.props.LA.img_dim = size(images_res.pvals.gray{1,1});
end
images_res.props.LA.index=1:1:size(images_res.pvals.gray,1);

%%
%======
disp(['<======"img_struct_resampler" ======> SA images']);
SA_start_res = size(images_res.pvals.gray,1)+1;

cntrs_SA_used = contour_used(images.props.SA.index, img_res_params.SA.index_used, img_res_params.SA.flip_contours);

if ~isempty(img_res_params.SA.index_used) 
    [temp.pvals, temp.X, temp.Y, temp.Z,  temp.LV, temp.LV3D] = img_sr_2isometric(...%==
        images.pvals.gray(img_res_params.SA.index_used,:),...
        images.coords.RCS.X(img_res_params.SA.index_used ,:),...
        images.coords.RCS.Y(img_res_params.SA.index_used ,:),...
        images.coords.RCS.Z(img_res_params.SA.index_used ,:), ...
        img_res_params.SA.resample_ratio,...
        img_res_params.SA.expand,...
        img_res_params.SA.interp.img,...
        t_last, ...
        img_res_params.SA.has_contours, ...
        files_contours_SA_endo, ...
        files_contours_SA_epi, ...
        images.props.SA.PixelSpacing, ...
        img_res_params.SA.crop_dims, ...
        img_res_params.SA.flip_contours, ...
        cntrs_SA_used,...
        coordsRconst);

    images_res.pvals.gray(SA_start_res:SA_start_res+size(temp.pvals,1)-1,:) = temp.pvals;
    images_res.coords.RCS.X(SA_start_res:SA_start_res+size(temp.pvals,1)-1,:) = temp.X;
    images_res.coords.RCS.Y(SA_start_res:SA_start_res+size(temp.pvals,1)-1,:) = temp.Y;
    images_res.coords.RCS.Z(SA_start_res:SA_start_res+size(temp.pvals,1)-1,:) = temp.Z;
    images_res.ROI.LV(SA_start_res:SA_start_res+size(temp.pvals,1)-1,:) = temp.LV;
    images_res.ROI.LV3D.SA = temp.LV3D;
    images_res.props.SA.img_dim = size(images_res.pvals.gray{SA_start_res,1});
end
images_res.props.SA.index = SA_start_res:1:size(images_res.pvals.gray,1);
clear temp;
%%
end

